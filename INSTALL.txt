Up-to-date information can always be found on the wiki:
http://0brg.net/anna/wiki/Install

To install and run the chatbot, you will have to install a few
software-packages as well as download some data. This guide should
help you get started.


   ## 0) PREPARATIONS ##

Dependencies:

- Python: 2.4 or higher. [1]
- Sqlalchemy 0.4.5 is known to work. Needed for the factoids plugin. [2]
- PyXMPP 1.0.0 is known to work. Needed for the XMPP frontend. [3]
- Java runtime environment and JPython needed for the annarithmetic
  plugin.


   ## 1) DOWNLOAD ##

Currently the source-code is only available through subversion. To
download the latest trunk, execute the following command:

  $ svn co svn://0brg.net/anna/trunk

If you don't have a subversion client you can get the official client
[4], or search the web for another one.


   ## 2) INSTALL ##

The only thing to install is the configuration-file, but the program
should do this for you automatically. Try running this first:

  $ ./anna console

If an error occured, create a directory called ".anna" in your home
directory and copy the config.sample file to it. Rename it to "config"
and edit the values as appropriate.


   ## 3) EXECUTE ##

To see the list of available frontends, run:

  $ ./anna --list

To run the bot with the chosen frontend, run:

  $ ./anna FRONTEND_NAME

You can supply multiple frontends to run simultaneously, seperated by
spaces.


   ## 4) EXECUTE IN BACKGROUND ##

Once the chatbot is up and running, you will probably want to run it in
the background and close the login sessions you have with the server.
This command won't do the trick though:

  $ ./anna &

The problem is that, in case you're using SSH at least, once you
disconnect from the server by typing "exit", for example, the HANGUP
(HUP for short) command is sent to all running processes of your session.
This includes the anna.py process you started above. To prevent this
from happening, use the nohup command:

  $ nohup ./anna &

The nohup command catches all HANGUP signals sent to it and ignores them.
This will also mean that, once logged out, there will be no way to pull
the running bot in fore-ground again. If you want that, use screen. more
information on screen can be found with the man command; "man screen".

A small note about nohup; it saves all output (stdout as well as stderr)
to a file called nohup.out in your working directory. This means that all
debugging will be stored in a file. After a while, this file can grow
pretty large. If you don't want that, try this:

  $ nohup ./anna &> /dev/null &


   ## 5) MISCELLANEOUS ##

Want to complain? Contribute? Dance? join us in:
bob@conference.jabber.xs4all.nl

Good luck =]

[1] http://www.python.org/
[2] http://www.sqlalchemy.org/
[3] http://pyxmpp.jajcus.net/
[4] http://subversion.tigris.org/
